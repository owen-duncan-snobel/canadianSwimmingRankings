{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js\";\nimport React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nclass Piechart extends Component {\n  render() {\n    let data;\n    let options; // * If no data has been passed down from the form or invalid display empty form\n\n    if (this.props.swimmerData == null) {\n      data = {\n        datasets: [{\n          label: ''\n        }]\n      };\n    } else {\n      data = {\n        labels: this.props.swimmerData.rank,\n        datasets: [{\n          label: this.props.swimEvent,\n          backgroundColor: 'rgb(255, 99, 132)',\n          pointBackgroundColor: ['rgb(255, 99, 132)'],\n          borderColor: 'rgb(255, 99, 132)',\n          fill: false,\n          data: this.props.swimmerData.time\n        }]\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \" \"));\n  }\n\n}","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js"],"names":["React","Component","Pie","Piechart","render","data","options","props","swimmerData","datasets","label","labels","rank","swimEvent","backgroundColor","pointBackgroundColor","borderColor","fill","time"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ;AACA,QAAIC,OAAJ,CAFK,CAGL;;AACA,QAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAoC;AAChCH,MAAAA,IAAI,GAAG;AACHI,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE;AADX,SADM;AADP,OAAP;AAOH,KARD,MAQO;AACHL,MAAAA,IAAI,GAAG;AACHM,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,WAAX,CAAuBI,IAD5B;AAEHH,QAAAA,QAAQ,EAAE,CAAC;AACPC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWM,SADX;AAEPC,UAAAA,eAAe,EAAE,mBAFV;AAGPC,UAAAA,oBAAoB,EAAE,CAAC,mBAAD,CAHf;AAIPC,UAAAA,WAAW,EAAE,mBAJN;AAKPC,UAAAA,IAAI,EAAE,KALC;AAMPZ,UAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,WAAX,CAAuBU;AANtB,SAAD;AAFP,OAAP;AAWH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEb,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ;AAKH;;AAhC4B","sourcesContent":["import React, { Component } from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nclass Piechart extends Component {\n    render() {\n        let data;\n        let options;\n        // * If no data has been passed down from the form or invalid display empty form\n        if (this.props.swimmerData == null) {\n            data = {\n                datasets: [\n                    {\n                        label: ''\n                    }\n                ]\n            }\n        } else {\n            data = {\n                labels: this.props.swimmerData.rank,\n                datasets: [{\n                    label: this.props.swimEvent,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    pointBackgroundColor: ['rgb(255, 99, 132)'],\n                    borderColor: 'rgb(255, 99, 132)',\n                    fill: false,\n                    data: this.props.swimmerData.time,\n                }]\n            }\n        }\n\n        return (\n            <div>\n                <Pie data={data} > </Pie>\n            </div >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}