{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/swimmertable/swimmertable.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\n\nclass SwimmerTable extends Component {\n  render() {\n    if (this.props.tableBody === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      });\n    } else {\n      let allowedKeys = [// '__EMPTY',               GENDER IS REDUNDANT\n      // '__EMPTY_1',             DISTANCE IS REDUNDANT\n      // '__EMPTY_2',             STROKE IS REDUNDANT\n      '__EMPTY_3', //  '__EMPTY_4',            BIRTHDATE NOT IMPORTANT CURRENTLY EITHER\n      '__EMPTY_5', '__EMPTY_6', '__EMPTY_7', '__EMPTY_9', //                          MEETDATE NOT IMPORTANT CURRENTLY AS DATE IS UNREADABLE  '__EMPTY_10',\n      '__EMPTY_11', '__EMPTY_12', '__EMPTY_13'];\n      return /*#__PURE__*/React.createElement(Table, {\n        className: \"swimTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, \"Fullname\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }, \"Nation\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, \"Clubcode\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, \"Place\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, \"Meetcity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, \"Meet\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, \"Clubname\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        name: \"swimTableData\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nexport default SwimmerTable;\n/*\n\n\n    // * Updates the table bodys data from graph (aka. Swimmer Name times ... from excel sheet)\n updateTableBody() {\n    // * If no data has been given table header remains empty\n    if (this.state.tableBody.length === 0) {\n        return;\n    }\n    else {\n        let allowedKeys = [\n            // '__EMPTY',               GENDER IS REDUNDANT\n            // '__EMPTY_1',             DISTANCE IS REDUNDANT\n            // '__EMPTY_2',             STROKE IS REDUNDANT\n            '__EMPTY_3',\n            //  '__EMPTY_4',            BIRTHDATE NOT IMPORTANT CURRENTLY EITHER\n            '__EMPTY_5',\n            '__EMPTY_6',\n            '__EMPTY_7',\n            '__EMPTY_9',\n            //                          MEETDATE NOT IMPORTANT CURRENTLY AS DATE IS UNREADABLE  '__EMPTY_10',\n            '__EMPTY_11',\n            '__EMPTY_12',\n            '__EMPTY_13']\n        return (\n            <tbody name=\"swimTableData\">\n                {\n                    this.state.tableBody.map(item => {\n                        return (<tr name={item.__EMPTY_9}>{\n                            Object.entries(item).filter(([key, value]) => allowedKeys.includes(key))\n                                .map(([key, value]) => {\n                                    return (<td>{value}</td>)\n                                })\n                        }\n                        </tr>)\n                    })\n                }\n            </tbody>\n        )\n\n    }\n}  */","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/swimmertable/swimmertable.js"],"names":["React","Component","Table","SwimmerTable","render","props","tableBody","allowedKeys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,SAAX,KAAyB,IAA7B,EAAmC;AAC/B,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAIH,KALD,MAKO;AAEH,UAAIC,WAAW,GAAG,CACd;AACA;AACA;AACA,iBAJc,EAKd;AACA,iBANc,EAOd,WAPc,EAQd,WARc,EASd,WATc,EAUd;AACA,kBAXc,EAYd,YAZc,EAad,YAbc,CAAlB;AAeA,0BACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,CADJ,CADJ,eAcI;AAAO,QAAA,IAAI,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAqBH;AACJ;;AA9CgC;;AAgDrC,eAAeJ,YAAf;AACA","sourcesContent":["import React from 'react';\nimport { Component } from 'react'\nimport Table from 'react-bootstrap/Table';\n\n\nclass SwimmerTable extends Component {\n    render() {\n        if (this.props.tableBody === null) {\n            return (\n                <div>\n                </div>\n            );\n        } else {\n\n            let allowedKeys = [\n                // '__EMPTY',               GENDER IS REDUNDANT\n                // '__EMPTY_1',             DISTANCE IS REDUNDANT\n                // '__EMPTY_2',             STROKE IS REDUNDANT\n                '__EMPTY_3',\n                //  '__EMPTY_4',            BIRTHDATE NOT IMPORTANT CURRENTLY EITHER\n                '__EMPTY_5',\n                '__EMPTY_6',\n                '__EMPTY_7',\n                '__EMPTY_9',\n                //                          MEETDATE NOT IMPORTANT CURRENTLY AS DATE IS UNREADABLE  '__EMPTY_10',\n                '__EMPTY_11',\n                '__EMPTY_12',\n                '__EMPTY_13']\n\n            return (\n                <Table className=\"swimTable\">\n                    <thead>\n                        <tr>\n                            <th>Fullname</th>\n                            <th>Nation</th>\n                            <th>Clubcode</th>\n                            <th>Time</th>\n                            <th>Place</th>\n                            <th>Meetcity</th>\n                            <th>Meet</th>\n                            <th>Clubname</th>\n                        </tr>\n                    </thead>\n\n                    <tbody name=\"swimTableData\">\n\n                    </tbody>\n\n                </Table>\n            )\n        }\n    }\n}\nexport default SwimmerTable;\n/*\n\n\n    // * Updates the table bodys data from graph (aka. Swimmer Name times ... from excel sheet)\n updateTableBody() {\n    // * If no data has been given table header remains empty\n    if (this.state.tableBody.length === 0) {\n        return;\n    }\n    else {\n        let allowedKeys = [\n            // '__EMPTY',               GENDER IS REDUNDANT\n            // '__EMPTY_1',             DISTANCE IS REDUNDANT\n            // '__EMPTY_2',             STROKE IS REDUNDANT\n            '__EMPTY_3',\n            //  '__EMPTY_4',            BIRTHDATE NOT IMPORTANT CURRENTLY EITHER\n            '__EMPTY_5',\n            '__EMPTY_6',\n            '__EMPTY_7',\n            '__EMPTY_9',\n            //                          MEETDATE NOT IMPORTANT CURRENTLY AS DATE IS UNREADABLE  '__EMPTY_10',\n            '__EMPTY_11',\n            '__EMPTY_12',\n            '__EMPTY_13']\n        return (\n            <tbody name=\"swimTableData\">\n                {\n                    this.state.tableBody.map(item => {\n                        return (<tr name={item.__EMPTY_9}>{\n                            Object.entries(item).filter(([key, value]) => allowedKeys.includes(key))\n                                .map(([key, value]) => {\n                                    return (<td>{value}</td>)\n                                })\n                        }\n                        </tr>)\n                    })\n                }\n            </tbody>\n        )\n\n    }\n}  */\n"]},"metadata":{},"sourceType":"module"}