{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js\";\nimport React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nclass Piechart extends Component {\n  // * Props can be deconstructed from meetData: {meetData (Meet Names), meetNumber (Array of number of occ. of each meet)}\n  render() {\n    function getRandomColor() {\n      var letters = '0123456789ABCDEF'.split('');\n      var color = '#';\n\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n\n      return color;\n    }\n\n    let data; // * If no data has been passed down from the form or invalid display empty form\n\n    if (this.props.meetData == null) {\n      data = {\n        datasets: [{\n          label: ''\n        }]\n      };\n    } else {\n      data = {\n        labels: this.props.meetData.meetName,\n        datasets: [{\n          data: this.props.meetData.meetNumber\n        }]\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Pie Example\"), /*#__PURE__*/React.createElement(Pie, {\n      data: data,\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), console.log(this.props.meetData));\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js"],"names":["React","Component","Pie","Piechart","render","getRandomColor","letters","split","color","i","Math","floor","random","data","props","meetData","datasets","label","labels","meetName","meetNumber","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7B;AACAG,EAAAA,MAAM,GAAG;AACL,aAASC,cAAT,GAA0B;AACtB,UAAIC,OAAO,GAAG,mBAAmBC,KAAnB,CAAyB,EAAzB,CAAd;AACA,UAAIC,KAAK,GAAG,GAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,QAAAA,KAAK,IAAIF,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACH;;AACD,aAAOJ,KAAP;AACH;;AAED,QAAIK,IAAJ,CAVK,CAWL;;AACA,QAAI,KAAKC,KAAL,CAAWC,QAAX,IAAuB,IAA3B,EAAiC;AAC7BF,MAAAA,IAAI,GAAG;AACHG,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE;AADX,SADM;AADP,OAAP;AAOH,KARD,MAQO;AACHJ,MAAAA,IAAI,GAAG;AACHK,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,QADzB;AAEHH,QAAAA,QAAQ,EAAE,CAAC;AACPH,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBK;AADnB,SAAD;AAFP,OAAP;AAMH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEP,IAAX;AAAiB,MAAA,MAAM,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKQ,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,QAAvB,CAHL,CADJ;AAOH;;AAtC4B;;AAwCjC,eAAeZ,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nclass Piechart extends Component {\n    // * Props can be deconstructed from meetData: {meetData (Meet Names), meetNumber (Array of number of occ. of each meet)}\n    render() {\n        function getRandomColor() {\n            var letters = '0123456789ABCDEF'.split('');\n            var color = '#';\n            for (var i = 0; i < 6; i++) {\n                color += letters[Math.floor(Math.random() * 16)];\n            }\n            return color;\n        }\n\n        let data;\n        // * If no data has been passed down from the form or invalid display empty form\n        if (this.props.meetData == null) {\n            data = {\n                datasets: [\n                    {\n                        label: ''\n                    }\n                ]\n            }\n        } else {\n            data = {\n                labels: this.props.meetData.meetName,\n                datasets: [{\n                    data: this.props.meetData.meetNumber,\n                }]\n            }\n        }\n\n        return (\n            <div>\n                <h2>Pie Example</h2>\n                <Pie data={data} height={100} />\n                {console.log(this.props.meetData)}\n            </div>\n        )\n    }\n}\nexport default Piechart;"]},"metadata":{},"sourceType":"module"}