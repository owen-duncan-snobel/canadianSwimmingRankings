{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/swimForm/swimForm.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Dashboard from '../dashboard/dashboard';\nimport XLSX from 'xlsx';\n/* import * as firebase from \"firebase/app\"; */\n// Add the Firebase services that you want to use\n\n/* import \"firebase/storage\"; */\n\n/* \n// * General Firebase config, does not matter if the api key is leaked(needed to fetch files), as long as it is not the ADMIN SDK FOR FIREBASE\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBuZ2fXe-NLt8N7e8Dq3HVMGOvvAjWSj6w\",\n    authDomain: \"canadian-swimming-ranks.firebaseapp.com\",\n    databaseURL: \"https://canadian-swimming-ranks.firebaseio.com\",\n    projectId: \"canadian-swimming-ranks\",\n    storageBucket: \"canadian-swimming-ranks.appspot.com\",\n    messagingSenderId: \"772356223119\",\n    appId: \"1:772356223119:web:40ef7c35bc78f6f3b340fa\",\n    measurementId: \"G-8LF3N3CFPZ\"\n};\nconst app = firebase.initializeApp(firebaseConfig);\n\n */\n\nclass SwimForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ddl_season: '2019-2020',\n      ddl_club: '72542',\n      ddl_course: 'SCM',\n      swimmerData: null,\n      swimEventName: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // * Handles the state selection for when you select a new dropdown from the Form \n\n\n  handleInputChange(onEvent) {\n    this.setState({\n      [onEvent.target.name]: onEvent.target.value\n    });\n  } // * Handles the logic for when you click submit on the form \n\n\n  handleSubmit(onEvent) {\n    // * Prevent page from rerouting (need to see if we want it to use a different url for page handling)\n    onEvent.preventDefault(); // * Formed data is used for getting the contents of the submitted form \n\n    const formdata = new FormData(onEvent.target);\n    let club = formdata.get('ddl_club');\n    let season = formdata.get('ddl_season');\n    let course = formdata.get('ddl_course');\n    let gender = formdata.get('ddl_gender');\n    let agegroup = formdata.get('ddl_age');\n    let event = formdata.get('ddl_event');\n    let stroke = event.split(' ')[1]; // * Required for getting correct Season, They store it as a single date, 2020 opposed to 2019-2020.\n\n    season = season.split('-')[1]; // * Required for search Params, needs to map name to appropriate fetch value\n\n    switch (stroke) {\n      case 'Fr':\n        stroke = '1';\n        break;\n\n      case 'Bk':\n        stroke = '2';\n        break;\n\n      case 'Br':\n        stroke = '3';\n        break;\n\n      case 'Bu':\n        stroke = '4';\n        break;\n\n      case 'Me':\n        stroke = '5';\n        break;\n\n      case 'Free Relay':\n        stroke = '6';\n        break;\n\n      case 'Medley Relay':\n        stroke = '6';\n        break;\n    } // * Consts needed for getting correct data to north american swimming (Can be changed in future)\n    // TODO Allow for language and point system changes if required\n\n\n    const language = 'us';\n    const points = 'fina_2019'; // * Creates a new URL adding the appropriate Search Parameters so that you can find the excel file\n\n    let url = new URL('https://www.swimrankings.net/services/RankingXls/ranking.xls?');\n    let searchParameter = new URLSearchParams(url);\n    searchParameter.append('gender', gender);\n    searchParameter.append('agegroup', agegroup);\n    searchParameter.append('course', course);\n    searchParameter.append('season', season);\n    searchParameter.append('clubID', club);\n    searchParameter.append('stroke', stroke);\n    url += searchParameter.toString(); // * CORS ANYWHERE IS USED, SINCE WE CAN NOT GET CORS FUNCTIONALITY FROM LOCALHOST:3000 and React.\n\n    console.log(url = 'https://cors-anywhere.herokuapp.com/' + url); // * Fetch the file from swimranking.net, then will convert from .xls (excel) to JSON for graphing and table\n\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => {\n      if (!response.ok) throw new Error(\"Unable to fetch file\");\n      return response.arrayBuffer();\n    }).then(buffer => {\n      let bookBuffer = new Uint8Array(buffer);\n      let workbook = XLSX.read(bookBuffer, {\n        type: \"array\"\n      }); // * Finds the correct sheet within the workbook based on the name of the event\n\n      let data = workbook.Sheets[event]; // * Converts the XLS (Excel File to JSON to allow us to graph data)\n\n      let toJSON = XLSX.utils.sheet_to_json(data); // console.log(toJSON)\n    }); // * API CALL WILL BE DONE HERE THEN SETS THE DATA (MAY CHANGE IN THE FUTURE)\n\n    /*\n            app.storage().ref(file).getDownloadURL().then(\n                (url) => {\n                    fetch(url, {\n                        method: \"GET\",\n                    })\n                        .then(response => {\n                            return response.json()\n                        })\n                    \n                       .then(dataset => {\n                           console.log(dataset)\n                           const standardize_times = (time) => {\n                               // * Ensures that all time strings given are in an appropriate ISO String format\n                               if (time.length === 5) time = '00:' + time;\n                               if (time.length === 7) time = '0' + time;\n                               let milli = ((parseInt(time.split(':')[0] * 60000)) + (parseInt(time.split(':')[1].split('.')[0] * 1000)) + (parseInt(time.split('.')[1]) * 10));\n                               return milli;\n                           }\n                           // * Work with JSON data here\n                           let time = dataset.data.map(x => standardize_times(x.TIME));\n                           let athletes = dataset.data.map(x => x.ATHLETES.split(',').reverse().join(' '));\n                           let rank = dataset.data.map(x => x.RANK).reverse();\n                           time = time.reverse();\n                           this.setState({ swimmerData: { time, athletes, rank } })\n                       }) \n                       \n                    // * CATCH NEEDED FOR RETURNING AN EMPTY OBJECT (aka. FILE DOESN'T exist or failed fetches to firebase)\n                }).catch(err => (err))\n     */\n    // * Set the event name to be passed down as a label for the graph\n\n    /*   this.setState({ eventName: season + ' ' + gender + ' ' + age + ' |' + race.split('_').join(' ') }) */\n  }\n\n  render() {\n    //   !!!NEED TO DECIDE IF WE WANT CHART TO ONLY APPEAR AFTER A FORM HAS BEEN RETURNED OR BEFORE\n    let chart; // * Don't display chart if no data has been provided yet\n\n    if (this.state.swimmerData == null) {//  chart = <Dashboard swimmerData={this.state.swimmerData} eventName={this.state.eventName} event />;\n    } else {\n      chart = /*#__PURE__*/React.createElement(Dashboard, {\n        swimmerData: this.state.swimmerData,\n        swimEvent: this.state.swimEventName,\n        event: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n      type: \"text/css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, `\n                    .dropdownBox{\n                        border: 1px solid #00aad8;\n                        border-radius: 0px;\n                        color: #00aad8;\n                        margin-left:0.5rem;\n                        margin-right:0.5rem;\n                        width:auto;\n                        font-size:13px;\n                    }\n                    .custom-select {\n                        background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%2300aad8' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\") \n                    }\n                    .formTitle{\n                        margin-top:1.5rem;\n                        color: #00aad8;\n                        font-weight:bold;\n                        text-transform: uppercase;\n                    }\n                    .formButton{\n                        background-color:#00aad8;\n                        border: 1px solid #00aad8;\n                        border-radius: 0px;\n                        height:38px;\n                        width:80px;\n                        font-size:13px;\n                    }\n               `), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"formTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"Swimming Canada Power Rankings\")), /*#__PURE__*/React.createElement(Form, {\n      className: \"rankingsForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ddl_season\",\n      id: \"ddl_season\",\n      value: this.state.ddl_season,\n      onEvent: this.handleInputChange,\n      className: \"dropdownBox custom-select\",\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"Season\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2007-2008\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, \"2007-2008\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2008-2009\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, \"2008-2009\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2009-2010\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, \"2009-2010\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2010-2011\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, \"2010-2011\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2011-2012\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, \"2011-2012\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2012-2013\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, \"2012-2013\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2013-2014\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, \"2013-2014\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2014-2015\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, \"2014-2015\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2015-2016\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, \"2015-2016\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2016-2017\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, \"2016-2017\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2017-2018\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, \"2017-2018\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2018-2019\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, \"2018-2019\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2019-2020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"2019-2020\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2020-2021\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, \"2020-2021\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2021-2022\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, \"2021-2022\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ddl_club\",\n      id: \"ddl_club\",\n      value: this.state.ddl_club,\n      onEvent: this.handleInputChange,\n      className: \"dropdownBox custom-select\",\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }, \"Club\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"72542\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }\n    }, \"Oakville Aquatic Club\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ddl_course\",\n      id: \"ddl_course\",\n      value: this.state.ddl_course,\n      onEvent: this.handleInputChange,\n      className: \"dropdownBox custom-select\",\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, \"Course\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"LCM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"Long Course (50m)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SCM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, \"Short Course (25m)\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ddl_gender\",\n      id: \"ddl_gender\",\n      className: \"dropdownBox custom-select\",\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"M\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"F\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }, \"Female\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ddl_age\",\n      id: \"ddl_age\",\n      className: \"dropdownBox custom-select\",\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"X_X\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"Open (All years)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"X_10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, \"10 years and younger\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"11_11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, \"11 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"11_12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, \"11 - 12 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"12_12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 33\n      }\n    }, \"12 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"13_13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, \"13 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"13_14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, \"13 - 14 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"14_14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }\n    }, \"14 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"15_15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    }, \"15 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"15_16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    }, \"15 - 16 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"15_17\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }, \"15 - 17 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"16_16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, \"16 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"17_17\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, \"17 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"17_18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }, \"17 - 18 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"18_18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, \"18 years\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"18_24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }, \"18 - 24 years\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"ddl_event\",\n      id: \"ddl_event\",\n      className: \"dropdownBox custom-select\",\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 33\n      }\n    }, \"Event\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"50m Fr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, \"50 Free\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"100m Fr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, \"100 Free\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Fr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    }, \"200 Free\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"400m Fr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    }, \"400 Free\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"800m Fr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }, \"800 Free\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1500m Fr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, \"1500 Free\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"50m Bk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }, \"50 Back\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"100m Bk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }, \"100 Back\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Bk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    }, \"200 Back\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"50m Br\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }\n    }, \"50 Breast\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"100m Br\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, \"100 Breast\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Br\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 33\n      }\n    }, \"200 Breast\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"50m Bu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 33\n      }\n    }, \"50 Fly\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"100m Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"100 Fly\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 33\n      }\n    }, \"200 Fly\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"100m Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, \"100 I.Medley\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, \"200 I.Medley\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"400m Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 33\n      }\n    }, \"400 I.Medley\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Free Relay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    }, \"200 Free Relay\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"400m Free Relay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, \"400 Free Relay\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"800m Free Relay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 33\n      }\n    }, \"800 Free Relay\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200m Medley Relay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 33\n      }\n    }, \"200 Medley Relay\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"400m Medley Relay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, \"400 Medley Relay\"))), /*#__PURE__*/React.createElement(Button, {\n      className: \"formButton\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, \"SHOW\"))), chart);\n  }\n\n}\n\nexport default SwimForm;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/swimForm/swimForm.js"],"names":["React","Form","Component","Button","Dashboard","XLSX","SwimForm","constructor","props","state","ddl_season","ddl_club","ddl_course","swimmerData","swimEventName","handleInputChange","bind","handleSubmit","onEvent","setState","target","name","value","preventDefault","formdata","FormData","club","get","season","course","gender","agegroup","event","stroke","split","language","points","url","URL","searchParameter","URLSearchParams","append","toString","console","log","fetch","method","then","response","ok","Error","arrayBuffer","buffer","bookBuffer","Uint8Array","workbook","read","type","data","Sheets","toJSON","utils","sheet_to_json","render","chart"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Dashboard from '../dashboard/dashboard'\nimport XLSX from 'xlsx'\n\n/* import * as firebase from \"firebase/app\"; */\n// Add the Firebase services that you want to use\n/* import \"firebase/storage\"; */\n\n/* \n// * General Firebase config, does not matter if the api key is leaked(needed to fetch files), as long as it is not the ADMIN SDK FOR FIREBASE\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBuZ2fXe-NLt8N7e8Dq3HVMGOvvAjWSj6w\",\n    authDomain: \"canadian-swimming-ranks.firebaseapp.com\",\n    databaseURL: \"https://canadian-swimming-ranks.firebaseio.com\",\n    projectId: \"canadian-swimming-ranks\",\n    storageBucket: \"canadian-swimming-ranks.appspot.com\",\n    messagingSenderId: \"772356223119\",\n    appId: \"1:772356223119:web:40ef7c35bc78f6f3b340fa\",\n    measurementId: \"G-8LF3N3CFPZ\"\n};\nconst app = firebase.initializeApp(firebaseConfig);\n\n */\nclass SwimForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ddl_season: '2019-2020',\n            ddl_club: '72542',\n            ddl_course: 'SCM',\n            swimmerData: null,\n            swimEventName: '',\n\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // * Handles the state selection for when you select a new dropdown from the Form \n    handleInputChange(onEvent) {\n        this.setState({ [onEvent.target.name]: onEvent.target.value });\n    }\n\n    // * Handles the logic for when you click submit on the form \n    handleSubmit(onEvent) {\n        // * Prevent page from rerouting (need to see if we want it to use a different url for page handling)\n        onEvent.preventDefault();\n\n        // * Formed data is used for getting the contents of the submitted form \n        const formdata = new FormData(onEvent.target);\n        let club = formdata.get('ddl_club');\n        let season = formdata.get('ddl_season');\n        let course = formdata.get('ddl_course');\n        let gender = formdata.get('ddl_gender');\n        let agegroup = formdata.get('ddl_age');\n        let event = formdata.get('ddl_event');\n        let stroke = event.split(' ')[1];\n\n\n        // * Required for getting correct Season, They store it as a single date, 2020 opposed to 2019-2020.\n        season = season.split('-')[1];\n\n        // * Required for search Params, needs to map name to appropriate fetch value\n        switch (stroke) {\n            case 'Fr':\n                stroke = '1';\n                break;\n            case 'Bk':\n                stroke = '2';\n                break;\n            case 'Br':\n                stroke = '3';\n                break;\n            case 'Bu':\n                stroke = '4';\n                break;\n            case 'Me':\n                stroke = '5';\n                break;\n            case 'Free Relay':\n                stroke = '6'\n                break;\n            case 'Medley Relay':\n                stroke = '6'\n                break;\n        }\n\n        // * Consts needed for getting correct data to north american swimming (Can be changed in future)\n        // TODO Allow for language and point system changes if required\n        const language = 'us';\n        const points = 'fina_2019';\n\n        // * Creates a new URL adding the appropriate Search Parameters so that you can find the excel file\n        let url = new URL('https://www.swimrankings.net/services/RankingXls/ranking.xls?');\n        let searchParameter = new URLSearchParams(url);\n        searchParameter.append('gender', gender);\n        searchParameter.append('agegroup', agegroup);\n        searchParameter.append('course', course);\n        searchParameter.append('season', season);\n        searchParameter.append('clubID', club);\n        searchParameter.append('stroke', stroke);\n        url += searchParameter.toString();\n\n        // * CORS ANYWHERE IS USED, SINCE WE CAN NOT GET CORS FUNCTIONALITY FROM LOCALHOST:3000 and React.\n        console.log(url = 'https://cors-anywhere.herokuapp.com/' + url)\n\n        // * Fetch the file from swimranking.net, then will convert from .xls (excel) to JSON for graphing and table\n        fetch(url, {\n            method: \"GET\"\n        })\n            .then(response => {\n                if (!response.ok) throw new Error(\"Unable to fetch file\");\n                return response.arrayBuffer();\n            })\n            .then(buffer => {\n                let bookBuffer = new Uint8Array(buffer);\n                let workbook = XLSX.read(bookBuffer, {\n                    type: \"array\"\n                })\n                // * Finds the correct sheet within the workbook based on the name of the event\n                let data = workbook.Sheets[event];\n                // * Converts the XLS (Excel File to JSON to allow us to graph data)\n                let toJSON = XLSX.utils.sheet_to_json(data);\n                // console.log(toJSON)\n            })\n        // * API CALL WILL BE DONE HERE THEN SETS THE DATA (MAY CHANGE IN THE FUTURE)\n\n        /*\n                app.storage().ref(file).getDownloadURL().then(\n                    (url) => {\n                        fetch(url, {\n                            method: \"GET\",\n                        })\n                            .then(response => {\n                                return response.json()\n                            })\n                        \n                           .then(dataset => {\n                               console.log(dataset)\n                               const standardize_times = (time) => {\n                                   // * Ensures that all time strings given are in an appropriate ISO String format\n                                   if (time.length === 5) time = '00:' + time;\n                                   if (time.length === 7) time = '0' + time;\n                                   let milli = ((parseInt(time.split(':')[0] * 60000)) + (parseInt(time.split(':')[1].split('.')[0] * 1000)) + (parseInt(time.split('.')[1]) * 10));\n                                   return milli;\n                               }\n                               // * Work with JSON data here\n                               let time = dataset.data.map(x => standardize_times(x.TIME));\n                               let athletes = dataset.data.map(x => x.ATHLETES.split(',').reverse().join(' '));\n                               let rank = dataset.data.map(x => x.RANK).reverse();\n                               time = time.reverse();\n                               this.setState({ swimmerData: { time, athletes, rank } })\n                           }) \n                           \n                        // * CATCH NEEDED FOR RETURNING AN EMPTY OBJECT (aka. FILE DOESN'T exist or failed fetches to firebase)\n                    }).catch(err => (err))\n         */\n        // * Set the event name to be passed down as a label for the graph\n        /*   this.setState({ eventName: season + ' ' + gender + ' ' + age + ' |' + race.split('_').join(' ') }) */\n    }\n\n    render() {\n        //   !!!NEED TO DECIDE IF WE WANT CHART TO ONLY APPEAR AFTER A FORM HAS BEEN RETURNED OR BEFORE\n        let chart;\n        // * Don't display chart if no data has been provided yet\n        if (this.state.swimmerData == null) {\n            //  chart = <Dashboard swimmerData={this.state.swimmerData} eventName={this.state.eventName} event />;\n        } else {\n            chart = <Dashboard swimmerData={this.state.swimmerData} swimEvent={this.state.swimEventName} event />\n        }\n\n        return (\n            <>\n                <style type=\"text/css\">\n                    {`\n                    .dropdownBox{\n                        border: 1px solid #00aad8;\n                        border-radius: 0px;\n                        color: #00aad8;\n                        margin-left:0.5rem;\n                        margin-right:0.5rem;\n                        width:auto;\n                        font-size:13px;\n                    }\n                    .custom-select {\n                        background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%2300aad8' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\") \n                    }\n                    .formTitle{\n                        margin-top:1.5rem;\n                        color: #00aad8;\n                        font-weight:bold;\n                        text-transform: uppercase;\n                    }\n                    .formButton{\n                        background-color:#00aad8;\n                        border: 1px solid #00aad8;\n                        border-radius: 0px;\n                        height:38px;\n                        width:80px;\n                        font-size:13px;\n                    }\n               `}\n                </style>\n                <div>\n                    <hr></hr>\n                    <h1 className=\"formTitle\">Swimming Canada Power Rankings</h1>\n                </div>\n                <Form className='rankingsForm' onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        {/**  Swimming Season */}\n                        <Form.Group >\n                            <Form.Control name=\"ddl_season\" id=\"ddl_season\" value={this.state.ddl_season} onEvent={this.handleInputChange} className=\"dropdownBox custom-select\" as=\"select\">\n                                <option value=\"\" disabled>Season</option>\n                                <option value=\"2007-2008\">2007-2008</option>\n                                <option value=\"2008-2009\">2008-2009</option>\n                                <option value=\"2009-2010\">2009-2010</option>\n                                <option value=\"2010-2011\">2010-2011</option>\n                                <option value=\"2011-2012\">2011-2012</option>\n                                <option value=\"2012-2013\">2012-2013</option>\n                                <option value=\"2013-2014\">2013-2014</option>\n                                <option value=\"2014-2015\">2014-2015</option>\n                                <option value=\"2015-2016\">2015-2016</option>\n                                <option value=\"2016-2017\">2016-2017</option>\n                                <option value=\"2017-2018\">2017-2018</option>\n                                <option value=\"2018-2019\">2018-2019</option>\n                                <option value=\"2019-2020\">2019-2020</option>\n                                <option value=\"2020-2021\">2020-2021</option>\n                                <option value=\"2021-2022\">2021-2022</option>\n                            </Form.Control>\n                        </Form.Group>\n                        {/** Club */}\n\n                        <Form.Group>\n                            <Form.Control name=\"ddl_club\" id=\"ddl_club\" value={this.state.ddl_club} onEvent={this.handleInputChange} className=\"dropdownBox custom-select\" as=\"select\">\n                                <option disabled>Club</option>\n                                <option value=\"72542\">Oakville Aquatic Club</option>\n                            </Form.Control>\n                        </Form.Group>\n                        {/**  Course */}\n                        <Form.Group >\n                            <Form.Control name=\"ddl_course\" id=\"ddl_course\" value={this.state.ddl_course} onEvent={this.handleInputChange} className=\"dropdownBox custom-select\" as=\"select\">\n                                <option disabled>Course</option>\n                                <option value=\"LCM\">Long Course (50m)</option>\n                                <option value=\"SCM\">Short Course (25m)</option>\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        {/**  Gender */}\n                        <Form.Group >\n                            <Form.Control name=\"ddl_gender\" id=\"ddl_gender\" className=\"dropdownBox custom-select\" as=\"select\">\n                                <option disabled>Gender</option>\n                                <option value=\"M\">Male</option>\n                                <option value=\"F\">Female</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        {/**  Age */}\n                        <Form.Group >\n                            <Form.Control name=\"ddl_age\" id=\"ddl_age\" className=\"dropdownBox custom-select\" as=\"select\">\n                                <option disabled>Age</option>\n                                <option value=\"X_X\">Open (All years)</option>\n                                <option value=\"X_10\">10 years and younger</option>\n                                <option value=\"11_11\">11 years</option>\n                                <option value=\"11_12\">11 - 12 years</option>\n                                <option value=\"12_12\">12 years</option>\n                                <option value=\"13_13\">13 years</option>\n                                <option value=\"13_14\">13 - 14 years</option>\n                                <option value=\"14_14\">14 years</option>\n                                <option value=\"15_15\">15 years</option>\n                                <option value=\"15_16\">15 - 16 years</option>\n                                <option value=\"15_17\">15 - 17 years</option>\n                                <option value=\"16_16\">16 years</option>\n                                <option value=\"17_17\">17 years</option>\n                                <option value=\"17_18\">17 - 18 years</option>\n                                <option value=\"18_18\">18 years</option>\n                                <option value=\"18_24\">18 - 24 years</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        {/**  Event */}\n                        {/* Values for events are named as such inorder to match naming convention of the worksheets from excel workbook */}\n                        <Form.Group >\n                            <Form.Control name=\"ddl_event\" id=\"ddl_event\" className=\"dropdownBox custom-select\" as=\"select\">\n                                <option disabled>Event</option>\n                                <option value=\"50m Fr\">50 Free</option>\n                                <option value=\"100m Fr\">100 Free</option>\n                                <option value=\"200m Fr\">200 Free</option>\n                                <option value=\"400m Fr\">400 Free</option>\n                                <option value=\"800m Fr\">800 Free</option>\n                                <option value=\"1500m Fr\">1500 Free</option>\n                                <option value=\"50m Bk\">50 Back</option>\n                                <option value=\"100m Bk\">100 Back</option>\n                                <option value=\"200m Bk\">200 Back</option>\n                                <option value=\"50m Br\">50 Breast</option>\n                                <option value=\"100m Br\">100 Breast</option>\n                                <option value=\"200m Br\">200 Breast</option>\n                                <option value=\"50m Bu\">50 Fly</option>\n                                <option value=\"100m Me\">100 Fly</option>\n                                <option value=\"200m Me\">200 Fly</option>\n                                <option value=\"100m Me\">100 I.Medley</option>\n                                <option value=\"200m Me\">200 I.Medley</option>\n                                <option value=\"400m Me\">400 I.Medley</option>\n                                <option value=\"200m Free Relay\">200 Free Relay</option>\n                                <option value=\"400m Free Relay\">400 Free Relay</option>\n                                <option value=\"800m Free Relay\">800 Free Relay</option>\n                                <option value=\"200m Medley Relay\">200 Medley Relay</option>\n                                <option value=\"400m Medley Relay\">400 Medley Relay</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button className=\"formButton\" type=\"submit\">\n                            SHOW\n                        </Button>\n                    </Form.Row>\n                </Form>\n                {/* Dashboard with all the logic for the graph **/}\n                {chart}\n            </>)\n    }\n}\nexport default SwimForm;"]},"metadata":{},"sourceType":"module"}