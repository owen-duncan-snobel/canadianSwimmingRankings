{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js\";\nimport React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nclass Piechart extends Component {\n  // * Props can be deconstructed from meetData: {meetData (Meet Names), meetNumber (Array of number of occ. of each meet)}\n  render() {\n    let data; // * If no data has been passed down from the form or invalid display empty form\n\n    data = {\n      labels: this.props.meetData.meetName,\n      datasets: [{\n        data: this.props.meetData.meetNumber\n      }],\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Pie Example\"), /*#__PURE__*/React.createElement(Pie, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), console.log(this.props.meetData));\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js"],"names":["React","Component","Pie","Piechart","render","data","labels","props","meetData","meetName","datasets","meetNumber","backgroundColor","hoverBackgroundColor","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7B;AACAG,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ,CADK,CAEL;;AAEAA,IAAAA,IAAI,GAAG;AACHC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QADzB;AAEHC,MAAAA,QAAQ,EAAE,CAAC;AACPL,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,QAAX,CAAoBG;AADnB,OAAD,CAFP;AAKHC,MAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,CALd;AAUHC,MAAAA,oBAAoB,EAAE,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB;AAVnB,KAAP;AAkBA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAER,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKS,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,QAAvB,CAHL,CADJ;AAOH;;AA/B4B;;AAiCjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nclass Piechart extends Component {\n    // * Props can be deconstructed from meetData: {meetData (Meet Names), meetNumber (Array of number of occ. of each meet)}\n    render() {\n        let data;\n        // * If no data has been passed down from the form or invalid display empty form\n\n        data = {\n            labels: this.props.meetData.meetName,\n            datasets: [{\n                data: this.props.meetData.meetNumber,\n            }],\n            backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n\n\n        return (\n            <div>\n                <h2>Pie Example</h2>\n                <Pie data={data} />\n                {console.log(this.props.meetData)}\n            </div>\n        )\n    }\n}\nexport default Piechart;"]},"metadata":{},"sourceType":"module"}