{"ast":null,"code":"// * Finds the element in an Array returns a Map (key,value) of the number of occurences of each distinctive element \nexport const mostOccurences = list => {\n  let map = new Map();\n\n  while (list.length !== 0) {\n    if (!map.has(list[0])) {\n      map.set(list[0], 1);\n    } else {\n      map.set(list[0], map.get(list[0]) + 1);\n    }\n\n    list.shift();\n  }\n\n  return map;\n};","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/constants/swimAnalytics/swimAnalytics.js"],"names":["mostOccurences","list","map","Map","length","has","set","get","shift"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAIC,IAAD,IAAU;AACpC,MAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;;AACA,SAAOF,IAAI,CAACG,MAAL,KAAgB,CAAvB,EAA0B;AACtB,QAAI,CAACF,GAAG,CAACG,GAAJ,CAAQJ,IAAI,CAAC,CAAD,CAAZ,CAAL,EAAuB;AACnBC,MAAAA,GAAG,CAACI,GAAJ,CAAQL,IAAI,CAAC,CAAD,CAAZ,EAAiB,CAAjB;AACH,KAFD,MAEO;AACHC,MAAAA,GAAG,CAACI,GAAJ,CAAQL,IAAI,CAAC,CAAD,CAAZ,EAAiBC,GAAG,CAACK,GAAJ,CAAQN,IAAI,CAAC,CAAD,CAAZ,IAAmB,CAApC;AACH;;AACDA,IAAAA,IAAI,CAACO,KAAL;AACH;;AACD,SAAON,GAAP;AACH,CAXM","sourcesContent":["// * Finds the element in an Array returns a Map (key,value) of the number of occurences of each distinctive element \nexport const mostOccurences = (list) => {\n    let map = new Map();\n    while (list.length !== 0) {\n        if (!map.has(list[0])) {\n            map.set(list[0], 1);\n        } else {\n            map.set(list[0], map.get(list[0]) + 1);\n        }\n        list.shift();\n    }\n    return map;\n};"]},"metadata":{},"sourceType":"module"}