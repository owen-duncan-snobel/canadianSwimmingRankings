{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/peakMonth/peakMonth.js\";\nimport React, { Component } from 'react';\nimport { EVENTS, mostOccurences } from '../../constants/arrays/arrays';\n\nclass PeakMonth extends Component {\n  render() {\n    if (this.props.swimmerData == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        name: \"PeakMonth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else {\n      let allData = this.props.swimmerData;\n      let data = []; // * Need to process data from Workbook -> Worksheets -> Event -> Swimmers\n\n      allData.forEach(Workbook => {\n        // * In every Workbook (Age / Year) it holds Sheets with the Events, will select the sheet that contains the events data\n        let Sheet = Workbook[EVENTS.indexOf(this.props.event)]; // * For the selected event collect all the swimmer data\n\n        Sheet.forEach(swimmer => {\n          data.push(swimmer);\n        });\n      });\n      console.log(mostOccurences(data));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, \"workings\");\n    }\n  }\n\n}\n\nexport default PeakMonth;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/peakMonth/peakMonth.js"],"names":["React","Component","EVENTS","mostOccurences","PeakMonth","render","props","swimmerData","allData","data","forEach","Workbook","Sheet","indexOf","event","swimmer","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,+BAAvC;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAoC;AAChC,0BACI;AAAK,QAAA,IAAI,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,KAJD,MAIO;AAEH,UAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWC,WAAzB;AACA,UAAIE,IAAI,GAAG,EAAX,CAHG,CAKH;;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,QAAQ,IAAI;AACxB;AACA,YAAIC,KAAK,GAAGD,QAAQ,CAACT,MAAM,CAACW,OAAP,CAAe,KAAKP,KAAL,CAAWQ,KAA1B,CAAD,CAApB,CAFwB,CAIxB;;AACAF,QAAAA,KAAK,CAACF,OAAN,CAAcK,OAAO,IAAI;AACrBN,UAAAA,IAAI,CAACO,IAAL,CAAUD,OAAV;AACH,SAFD;AAGH,OARD;AAWAE,MAAAA,OAAO,CAACC,GAAR,CAAYf,cAAc,CAACM,IAAD,CAA1B;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH;AACJ;;AA5B6B;;AA8BlC,eAAeL,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { EVENTS, mostOccurences } from '../../constants/arrays/arrays';\nclass PeakMonth extends Component {\n    render() {\n        if (this.props.swimmerData == null) {\n            return (\n                <div name=\"PeakMonth\"> </div>\n            )\n        } else {\n\n            let allData = this.props.swimmerData;\n            let data = [];\n\n            // * Need to process data from Workbook -> Worksheets -> Event -> Swimmers\n            allData.forEach(Workbook => {\n                // * In every Workbook (Age / Year) it holds Sheets with the Events, will select the sheet that contains the events data\n                let Sheet = Workbook[EVENTS.indexOf(this.props.event)];\n\n                // * For the selected event collect all the swimmer data\n                Sheet.forEach(swimmer => {\n                    data.push(swimmer);\n                })\n            })\n\n\n            console.log(mostOccurences(data));\n            return (\n                <div>workings</div>\n            )\n        }\n    }\n}\nexport default PeakMonth;"]},"metadata":{},"sourceType":"module"}