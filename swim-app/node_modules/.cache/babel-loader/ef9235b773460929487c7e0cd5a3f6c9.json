{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js\";\nimport React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nclass Piechart extends Component {\n  // * Props can be deconstructed from meetData: {meetData (Meet Names), meetNumber (Array of number of occ. of each meet)}\n  render() {\n    let data;\n\n    function getRandomColor(data) {\n      let colors = [];\n\n      for (let i = 0; i < data.length; i++) {\n        colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\n      }\n\n      return colors;\n    } // * If no data has been passed down from the form or invalid display empty form\n\n\n    if (this.props.meetData == null) {\n      data = {\n        datasets: [{\n          label: ''\n        }]\n      };\n    } else {\n      data = {\n        labels: this.props.meetData.meetName,\n        datasets: [{\n          data: this.props.meetData.meetNumber,\n          backgroundColor: ['red', 'yellow']\n        }]\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Pie Example\"), /*#__PURE__*/React.createElement(Pie, {\n      data: data,\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), console.log(this.props.meetData));\n  }\n\n}\n\nexport default Piechart;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/piechart/piechart.js"],"names":["React","Component","Pie","Piechart","render","data","getRandomColor","colors","i","length","push","Math","floor","random","toString","props","meetData","datasets","label","labels","meetName","meetNumber","backgroundColor","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7B;AACAG,EAAAA,MAAM,GAAG;AAEL,QAAIC,IAAJ;;AACA,aAASC,cAAT,CAAwBD,IAAxB,EAA8B;AAC1B,UAAIE,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCD,QAAAA,MAAM,CAACG,IAAP,CAAY,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAlB;AACH;;AACD,aAAOP,MAAP;AACH,KATI,CAWL;;;AACA,QAAI,KAAKQ,KAAL,CAAWC,QAAX,IAAuB,IAA3B,EAAiC;AAC7BX,MAAAA,IAAI,GAAG;AACHY,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE;AADX,SADM;AADP,OAAP;AAOH,KARD,MAQO;AACHb,MAAAA,IAAI,GAAG;AACHc,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,QADzB;AAEHH,QAAAA,QAAQ,EAAE,CAAC;AACPZ,UAAAA,IAAI,EAAE,KAAKU,KAAL,CAAWC,QAAX,CAAoBK,UADnB;AAEPC,UAAAA,eAAe,EAAE,CAAC,KAAD,EAAQ,QAAR;AAFV,SAAD;AAFP,OAAP;AAOH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEjB,IAAX;AAAiB,MAAA,MAAM,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKkB,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,QAAvB,CAHL,CADJ;AAOH;;AAvC4B;;AAyCjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nclass Piechart extends Component {\n    // * Props can be deconstructed from meetData: {meetData (Meet Names), meetNumber (Array of number of occ. of each meet)}\n    render() {\n\n        let data;\n        function getRandomColor(data) {\n            let colors = [];\n            for (let i = 0; i < data.length; i++) {\n                colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\n            }\n            return colors;\n        }\n\n        // * If no data has been passed down from the form or invalid display empty form\n        if (this.props.meetData == null) {\n            data = {\n                datasets: [\n                    {\n                        label: ''\n                    }\n                ]\n            }\n        } else {\n            data = {\n                labels: this.props.meetData.meetName,\n                datasets: [{\n                    data: this.props.meetData.meetNumber,\n                    backgroundColor: ['red', 'yellow']\n                }]\n            }\n        }\n\n        return (\n            <div>\n                <h2>Pie Example</h2>\n                <Pie data={data} height={100} />\n                {console.log(this.props.meetData)}\n            </div>\n        )\n    }\n}\nexport default Piechart;"]},"metadata":{},"sourceType":"module"}