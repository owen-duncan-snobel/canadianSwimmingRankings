{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/peakMonth/peakMonth.js\";\nimport React, { Component } from 'react';\nimport { EVENTS } from '../../constants/swimming/swimming';\nimport * as SwimAnalytics from '../../constants/swimAnalytics/swimAnalytics';\n\nclass PeakMonth extends Component {\n  render() {\n    if (this.props.swimmerData == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        name: \"PeakMonth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else {\n      let allData = this.props.swimmerData;\n      let data = []; // * Need to process data from Workbook -> Worksheets -> Event -> Swimmers\n\n      allData.forEach(Workbook => {\n        // * In every Workbook (Age / Year) it holds Sheets with the Events, will select the sheet that contains the events data\n        console.log(Workbook);\n        console.log(Sheet); // * For the selected event collect all the swimmer data\n\n        Sheet.forEach(swimmer => {\n          console.log(swimmer);\n          data.push(swimmer);\n        });\n      });\n      console.log(data); // let meets = data.map(meet => meet.__EMPTY_10)\n      // console.log(meets);\n      //console.log(SwimAnalytics.mostOccurences(data));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \"workings\");\n    }\n  }\n\n}\n\nexport default PeakMonth;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/peakMonth/peakMonth.js"],"names":["React","Component","EVENTS","SwimAnalytics","PeakMonth","render","props","swimmerData","allData","data","forEach","Workbook","console","log","Sheet","swimmer","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6CAA/B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAoC;AAChC,0BACI;AAAK,QAAA,IAAI,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,KAJD,MAIO;AAEH,UAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWC,WAAzB;AACA,UAAIE,IAAI,GAAG,EAAX,CAHG,CAKH;;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,QAAQ,IAAI;AACxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAHwB,CAIxB;;AACAA,QAAAA,KAAK,CAACJ,OAAN,CAAcK,OAAO,IAAI;AACrBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAN,UAAAA,IAAI,CAACO,IAAL,CAAUD,OAAV;AACH,SAHD;AAIH,OATD;AAWAH,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAjBG,CAkBH;AACA;AAEA;;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH;AACJ;;AAhC6B;;AAkClC,eAAeL,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { EVENTS } from '../../constants/swimming/swimming';\nimport * as SwimAnalytics from '../../constants/swimAnalytics/swimAnalytics';\n\nclass PeakMonth extends Component {\n    render() {\n        if (this.props.swimmerData == null) {\n            return (\n                <div name=\"PeakMonth\"> </div>\n            )\n        } else {\n\n            let allData = this.props.swimmerData;\n            let data = [];\n\n            // * Need to process data from Workbook -> Worksheets -> Event -> Swimmers\n            allData.forEach(Workbook => {\n                // * In every Workbook (Age / Year) it holds Sheets with the Events, will select the sheet that contains the events data\n                console.log(Workbook)\n                console.log(Sheet);\n                // * For the selected event collect all the swimmer data\n                Sheet.forEach(swimmer => {\n                    console.log(swimmer);\n                    data.push(swimmer);\n                })\n            })\n\n            console.log(data);\n            // let meets = data.map(meet => meet.__EMPTY_10)\n            // console.log(meets);\n\n            //console.log(SwimAnalytics.mostOccurences(data));\n            return (\n                <div>workings</div>\n            )\n        }\n    }\n}\nexport default PeakMonth;"]},"metadata":{},"sourceType":"module"}