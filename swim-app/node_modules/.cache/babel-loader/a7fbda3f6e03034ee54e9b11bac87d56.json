{"ast":null,"code":"/*\nRainbowVis-JS \nReleased under Eclipse Public License - v 1.0\n*/\nfunction Rainbow() {\n  \"use strict\";\n\n  var gradients = null;\n  var minNum = 0;\n  var maxNum = 100;\n  var colours = ['ff0000', 'ffff00', '00ff00', '0000ff'];\n  setColours(colours);\n\n  function setColours(spectrum) {\n    if (spectrum.length < 2) {\n      throw new Error('Rainbow must have two or more colours.');\n    } else {\n      var increment = (maxNum - minNum) / (spectrum.length - 1);\n      var firstGradient = new ColourGradient();\n      firstGradient.setGradient(spectrum[0], spectrum[1]);\n      firstGradient.setNumberRange(minNum, minNum + increment);\n      gradients = [firstGradient];\n\n      for (var i = 1; i < spectrum.length - 1; i++) {\n        var colourGradient = new ColourGradient();\n        colourGradient.setGradient(spectrum[i], spectrum[i + 1]);\n        colourGradient.setNumberRange(minNum + increment * i, minNum + increment * (i + 1));\n        gradients[i] = colourGradient;\n      }\n\n      colours = spectrum;\n    }\n  }\n\n  this.setSpectrum = function () {\n    setColours(arguments);\n    return this;\n  };\n\n  this.setSpectrumByArray = function (array) {\n    setColours(array);\n    return this;\n  };\n\n  this.colourAt = function (number) {\n    if (isNaN(number)) {\n      throw new TypeError(number + ' is not a number');\n    } else if (gradients.length === 1) {\n      return gradients[0].colourAt(number);\n    } else {\n      var segment = (maxNum - minNum) / gradients.length;\n      var index = Math.min(Math.floor((Math.max(number, minNum) - minNum) / segment), gradients.length - 1);\n      return gradients[index].colourAt(number);\n    }\n  };\n\n  this.colorAt = this.colourAt;\n\n  this.setNumberRange = function (minNumber, maxNumber) {\n    if (maxNumber > minNumber) {\n      minNum = minNumber;\n      maxNum = maxNumber;\n      setColours(colours);\n    } else {\n      throw new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n    }\n\n    return this;\n  };\n}\n\nfunction ColourGradient() {\n  \"use strict\";\n\n  var startColour = 'ff0000';\n  var endColour = '0000ff';\n  var minNum = 0;\n  var maxNum = 100;\n\n  this.setGradient = function (colourStart, colourEnd) {\n    startColour = getHexColour(colourStart);\n    endColour = getHexColour(colourEnd);\n  };\n\n  this.setNumberRange = function (minNumber, maxNumber) {\n    if (maxNumber > minNumber) {\n      minNum = minNumber;\n      maxNum = maxNumber;\n    } else {\n      throw new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n    }\n  };\n\n  this.colourAt = function (number) {\n    return calcHex(number, startColour.substring(0, 2), endColour.substring(0, 2)) + calcHex(number, startColour.substring(2, 4), endColour.substring(2, 4)) + calcHex(number, startColour.substring(4, 6), endColour.substring(4, 6));\n  };\n\n  function calcHex(number, channelStart_Base16, channelEnd_Base16) {\n    var num = number;\n\n    if (num < minNum) {\n      num = minNum;\n    }\n\n    if (num > maxNum) {\n      num = maxNum;\n    }\n\n    var numRange = maxNum - minNum;\n    var cStart_Base10 = parseInt(channelStart_Base16, 16);\n    var cEnd_Base10 = parseInt(channelEnd_Base16, 16);\n    var cPerUnit = (cEnd_Base10 - cStart_Base10) / numRange;\n    var c_Base10 = Math.round(cPerUnit * (num - minNum) + cStart_Base10);\n    return formatHex(c_Base10.toString(16));\n  }\n\n  function formatHex(hex) {\n    if (hex.length === 1) {\n      return '0' + hex;\n    } else {\n      return hex;\n    }\n  }\n\n  function isHexColour(string) {\n    var regex = /^#?[0-9a-fA-F]{6}$/i;\n    return regex.test(string);\n  }\n\n  function getHexColour(string) {\n    if (isHexColour(string)) {\n      return string.substring(string.length - 6, string.length);\n    } else {\n      var name = string.toLowerCase();\n\n      if (colourNames.hasOwnProperty(name)) {\n        return colourNames[name];\n      }\n\n      throw new Error(string + ' is not a valid colour.');\n    }\n  } // Extended list of CSS colornames s taken from\n  // http://www.w3.org/TR/css3-color/#svg-color\n\n\n  var colourNames = {\n    aliceblue: \"F0F8FF\",\n    antiquewhite: \"FAEBD7\",\n    aqua: \"00FFFF\",\n    aquamarine: \"7FFFD4\",\n    azure: \"F0FFFF\",\n    beige: \"F5F5DC\",\n    bisque: \"FFE4C4\",\n    black: \"000000\",\n    blanchedalmond: \"FFEBCD\",\n    blue: \"0000FF\",\n    blueviolet: \"8A2BE2\",\n    brown: \"A52A2A\",\n    burlywood: \"DEB887\",\n    cadetblue: \"5F9EA0\",\n    chartreuse: \"7FFF00\",\n    chocolate: \"D2691E\",\n    coral: \"FF7F50\",\n    cornflowerblue: \"6495ED\",\n    cornsilk: \"FFF8DC\",\n    crimson: \"DC143C\",\n    cyan: \"00FFFF\",\n    darkblue: \"00008B\",\n    darkcyan: \"008B8B\",\n    darkgoldenrod: \"B8860B\",\n    darkgray: \"A9A9A9\",\n    darkgreen: \"006400\",\n    darkgrey: \"A9A9A9\",\n    darkkhaki: \"BDB76B\",\n    darkmagenta: \"8B008B\",\n    darkolivegreen: \"556B2F\",\n    darkorange: \"FF8C00\",\n    darkorchid: \"9932CC\",\n    darkred: \"8B0000\",\n    darksalmon: \"E9967A\",\n    darkseagreen: \"8FBC8F\",\n    darkslateblue: \"483D8B\",\n    darkslategray: \"2F4F4F\",\n    darkslategrey: \"2F4F4F\",\n    darkturquoise: \"00CED1\",\n    darkviolet: \"9400D3\",\n    deeppink: \"FF1493\",\n    deepskyblue: \"00BFFF\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1E90FF\",\n    firebrick: \"B22222\",\n    floralwhite: \"FFFAF0\",\n    forestgreen: \"228B22\",\n    fuchsia: \"FF00FF\",\n    gainsboro: \"DCDCDC\",\n    ghostwhite: \"F8F8FF\",\n    gold: \"FFD700\",\n    goldenrod: \"DAA520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"ADFF2F\",\n    grey: \"808080\",\n    honeydew: \"F0FFF0\",\n    hotpink: \"FF69B4\",\n    indianred: \"CD5C5C\",\n    indigo: \"4B0082\",\n    ivory: \"FFFFF0\",\n    khaki: \"F0E68C\",\n    lavender: \"E6E6FA\",\n    lavenderblush: \"FFF0F5\",\n    lawngreen: \"7CFC00\",\n    lemonchiffon: \"FFFACD\",\n    lightblue: \"ADD8E6\",\n    lightcoral: \"F08080\",\n    lightcyan: \"E0FFFF\",\n    lightgoldenrodyellow: \"FAFAD2\",\n    lightgray: \"D3D3D3\",\n    lightgreen: \"90EE90\",\n    lightgrey: \"D3D3D3\",\n    lightpink: \"FFB6C1\",\n    lightsalmon: \"FFA07A\",\n    lightseagreen: \"20B2AA\",\n    lightskyblue: \"87CEFA\",\n    lightslategray: \"778899\",\n    lightslategrey: \"778899\",\n    lightsteelblue: \"B0C4DE\",\n    lightyellow: \"FFFFE0\",\n    lime: \"00FF00\",\n    limegreen: \"32CD32\",\n    linen: \"FAF0E6\",\n    magenta: \"FF00FF\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66CDAA\",\n    mediumblue: \"0000CD\",\n    mediumorchid: \"BA55D3\",\n    mediumpurple: \"9370DB\",\n    mediumseagreen: \"3CB371\",\n    mediumslateblue: \"7B68EE\",\n    mediumspringgreen: \"00FA9A\",\n    mediumturquoise: \"48D1CC\",\n    mediumvioletred: \"C71585\",\n    midnightblue: \"191970\",\n    mintcream: \"F5FFFA\",\n    mistyrose: \"FFE4E1\",\n    moccasin: \"FFE4B5\",\n    navajowhite: \"FFDEAD\",\n    navy: \"000080\",\n    oldlace: \"FDF5E6\",\n    olive: \"808000\",\n    olivedrab: \"6B8E23\",\n    orange: \"FFA500\",\n    orangered: \"FF4500\",\n    orchid: \"DA70D6\",\n    palegoldenrod: \"EEE8AA\",\n    palegreen: \"98FB98\",\n    paleturquoise: \"AFEEEE\",\n    palevioletred: \"DB7093\",\n    papayawhip: \"FFEFD5\",\n    peachpuff: \"FFDAB9\",\n    peru: \"CD853F\",\n    pink: \"FFC0CB\",\n    plum: \"DDA0DD\",\n    powderblue: \"B0E0E6\",\n    purple: \"800080\",\n    red: \"FF0000\",\n    rosybrown: \"BC8F8F\",\n    royalblue: \"4169E1\",\n    saddlebrown: \"8B4513\",\n    salmon: \"FA8072\",\n    sandybrown: \"F4A460\",\n    seagreen: \"2E8B57\",\n    seashell: \"FFF5EE\",\n    sienna: \"A0522D\",\n    silver: \"C0C0C0\",\n    skyblue: \"87CEEB\",\n    slateblue: \"6A5ACD\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"FFFAFA\",\n    springgreen: \"00FF7F\",\n    steelblue: \"4682B4\",\n    tan: \"D2B48C\",\n    teal: \"008080\",\n    thistle: \"D8BFD8\",\n    tomato: \"FF6347\",\n    turquoise: \"40E0D0\",\n    violet: \"EE82EE\",\n    wheat: \"F5DEB3\",\n    white: \"FFFFFF\",\n    whitesmoke: \"F5F5F5\",\n    yellow: \"FFFF00\",\n    yellowgreen: \"9ACD32\"\n  };\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = Rainbow;\n}","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/node_modules/rainbowvis.js/rainbowvis.js"],"names":["Rainbow","gradients","minNum","maxNum","colours","setColours","spectrum","length","Error","increment","firstGradient","ColourGradient","setGradient","setNumberRange","i","colourGradient","setSpectrum","arguments","setSpectrumByArray","array","colourAt","number","isNaN","TypeError","segment","index","Math","min","floor","max","colorAt","minNumber","maxNumber","RangeError","startColour","endColour","colourStart","colourEnd","getHexColour","calcHex","substring","channelStart_Base16","channelEnd_Base16","num","numRange","cStart_Base10","parseInt","cEnd_Base10","cPerUnit","c_Base10","round","formatHex","toString","hex","isHexColour","string","regex","test","name","toLowerCase","colourNames","hasOwnProperty","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","module","exports"],"mappings":"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","sourcesContent":["/*\nRainbowVis-JS \nReleased under Eclipse Public License - v 1.0\n*/\n\nfunction Rainbow()\n{\n\t\"use strict\";\n\tvar gradients = null;\n\tvar minNum = 0;\n\tvar maxNum = 100;\n\tvar colours = ['ff0000', 'ffff00', '00ff00', '0000ff']; \n\tsetColours(colours);\n\t\n\tfunction setColours (spectrum) \n\t{\n\t\tif (spectrum.length < 2) {\n\t\t\tthrow new Error('Rainbow must have two or more colours.');\n\t\t} else {\n\t\t\tvar increment = (maxNum - minNum)/(spectrum.length - 1);\n\t\t\tvar firstGradient = new ColourGradient();\n\t\t\tfirstGradient.setGradient(spectrum[0], spectrum[1]);\n\t\t\tfirstGradient.setNumberRange(minNum, minNum + increment);\n\t\t\tgradients = [ firstGradient ];\n\t\t\t\n\t\t\tfor (var i = 1; i < spectrum.length - 1; i++) {\n\t\t\t\tvar colourGradient = new ColourGradient();\n\t\t\t\tcolourGradient.setGradient(spectrum[i], spectrum[i + 1]);\n\t\t\t\tcolourGradient.setNumberRange(minNum + increment * i, minNum + increment * (i + 1)); \n\t\t\t\tgradients[i] = colourGradient; \n\t\t\t}\n\n\t\t\tcolours = spectrum;\n\t\t}\n\t}\n\n\tthis.setSpectrum = function () \n\t{\n\t\tsetColours(arguments);\n\t\treturn this;\n\t}\n\n\tthis.setSpectrumByArray = function (array)\n\t{\n\t\tsetColours(array);\n\t\treturn this;\n\t}\n\n\tthis.colourAt = function (number)\n\t{\n\t\tif (isNaN(number)) {\n\t\t\tthrow new TypeError(number + ' is not a number');\n\t\t} else if (gradients.length === 1) {\n\t\t\treturn gradients[0].colourAt(number);\n\t\t} else {\n\t\t\tvar segment = (maxNum - minNum)/(gradients.length);\n\t\t\tvar index = Math.min(Math.floor((Math.max(number, minNum) - minNum)/segment), gradients.length - 1);\n\t\t\treturn gradients[index].colourAt(number);\n\t\t}\n\t}\n\n\tthis.colorAt = this.colourAt;\n\n\tthis.setNumberRange = function (minNumber, maxNumber)\n\t{\n\t\tif (maxNumber > minNumber) {\n\t\t\tminNum = minNumber;\n\t\t\tmaxNum = maxNumber;\n\t\t\tsetColours(colours);\n\t\t} else {\n\t\t\tthrow new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n\t\t}\n\t\treturn this;\n\t}\n}\n\nfunction ColourGradient() \n{\n\t\"use strict\";\n\tvar startColour = 'ff0000';\n\tvar endColour = '0000ff';\n\tvar minNum = 0;\n\tvar maxNum = 100;\n\n\tthis.setGradient = function (colourStart, colourEnd)\n\t{\n\t\tstartColour = getHexColour(colourStart);\n\t\tendColour = getHexColour(colourEnd);\n\t}\n\n\tthis.setNumberRange = function (minNumber, maxNumber)\n\t{\n\t\tif (maxNumber > minNumber) {\n\t\t\tminNum = minNumber;\n\t\t\tmaxNum = maxNumber;\n\t\t} else {\n\t\t\tthrow new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n\t\t}\n\t}\n\n\tthis.colourAt = function (number)\n\t{\n\t\treturn calcHex(number, startColour.substring(0,2), endColour.substring(0,2)) \n\t\t\t+ calcHex(number, startColour.substring(2,4), endColour.substring(2,4)) \n\t\t\t+ calcHex(number, startColour.substring(4,6), endColour.substring(4,6));\n\t}\n\t\n\tfunction calcHex(number, channelStart_Base16, channelEnd_Base16)\n\t{\n\t\tvar num = number;\n\t\tif (num < minNum) {\n\t\t\tnum = minNum;\n\t\t}\n\t\tif (num > maxNum) {\n\t\t\tnum = maxNum;\n\t\t} \n\t\tvar numRange = maxNum - minNum;\n\t\tvar cStart_Base10 = parseInt(channelStart_Base16, 16);\n\t\tvar cEnd_Base10 = parseInt(channelEnd_Base16, 16); \n\t\tvar cPerUnit = (cEnd_Base10 - cStart_Base10)/numRange;\n\t\tvar c_Base10 = Math.round(cPerUnit * (num - minNum) + cStart_Base10);\n\t\treturn formatHex(c_Base10.toString(16));\n\t}\n\n\tfunction formatHex(hex) \n\t{\n\t\tif (hex.length === 1) {\n\t\t\treturn '0' + hex;\n\t\t} else {\n\t\t\treturn hex;\n\t\t}\n\t} \n\t\n\tfunction isHexColour(string)\n\t{\n\t\tvar regex = /^#?[0-9a-fA-F]{6}$/i;\n\t\treturn regex.test(string);\n\t}\n\n\tfunction getHexColour(string)\n\t{\n\t\tif (isHexColour(string)) {\n\t\t\treturn string.substring(string.length - 6, string.length);\n\t\t} else {\n\t\t\tvar name = string.toLowerCase();\n\t\t\tif (colourNames.hasOwnProperty(name)) {\n\t\t\t\treturn colourNames[name];\n\t\t\t}\n\t\t\tthrow new Error(string + ' is not a valid colour.');\n\t\t}\n\t}\n\t\n\t// Extended list of CSS colornames s taken from\n\t// http://www.w3.org/TR/css3-color/#svg-color\n\tvar colourNames = {\n\t\taliceblue: \"F0F8FF\",\n\t\tantiquewhite: \"FAEBD7\",\n\t\taqua: \"00FFFF\",\n\t\taquamarine: \"7FFFD4\",\n\t\tazure: \"F0FFFF\",\n\t\tbeige: \"F5F5DC\",\n\t\tbisque: \"FFE4C4\",\n\t\tblack: \"000000\",\n\t\tblanchedalmond: \"FFEBCD\",\n\t\tblue: \"0000FF\",\n\t\tblueviolet: \"8A2BE2\",\n\t\tbrown: \"A52A2A\",\n\t\tburlywood: \"DEB887\",\n\t\tcadetblue: \"5F9EA0\",\n\t\tchartreuse: \"7FFF00\",\n\t\tchocolate: \"D2691E\",\n\t\tcoral: \"FF7F50\",\n\t\tcornflowerblue: \"6495ED\",\n\t\tcornsilk: \"FFF8DC\",\n\t\tcrimson: \"DC143C\",\n\t\tcyan: \"00FFFF\",\n\t\tdarkblue: \"00008B\",\n\t\tdarkcyan: \"008B8B\",\n\t\tdarkgoldenrod: \"B8860B\",\n\t\tdarkgray: \"A9A9A9\",\n\t\tdarkgreen: \"006400\",\n\t\tdarkgrey: \"A9A9A9\",\n\t\tdarkkhaki: \"BDB76B\",\n\t\tdarkmagenta: \"8B008B\",\n\t\tdarkolivegreen: \"556B2F\",\n\t\tdarkorange: \"FF8C00\",\n\t\tdarkorchid: \"9932CC\",\n\t\tdarkred: \"8B0000\",\n\t\tdarksalmon: \"E9967A\",\n\t\tdarkseagreen: \"8FBC8F\",\n\t\tdarkslateblue: \"483D8B\",\n\t\tdarkslategray: \"2F4F4F\",\n\t\tdarkslategrey: \"2F4F4F\",\n\t\tdarkturquoise: \"00CED1\",\n\t\tdarkviolet: \"9400D3\",\n\t\tdeeppink: \"FF1493\",\n\t\tdeepskyblue: \"00BFFF\",\n\t\tdimgray: \"696969\",\n\t\tdimgrey: \"696969\",\n\t\tdodgerblue: \"1E90FF\",\n\t\tfirebrick: \"B22222\",\n\t\tfloralwhite: \"FFFAF0\",\n\t\tforestgreen: \"228B22\",\n\t\tfuchsia: \"FF00FF\",\n\t\tgainsboro: \"DCDCDC\",\n\t\tghostwhite: \"F8F8FF\",\n\t\tgold: \"FFD700\",\n\t\tgoldenrod: \"DAA520\",\n\t\tgray: \"808080\",\n\t\tgreen: \"008000\",\n\t\tgreenyellow: \"ADFF2F\",\n\t\tgrey: \"808080\",\n\t\thoneydew: \"F0FFF0\",\n\t\thotpink: \"FF69B4\",\n\t\tindianred: \"CD5C5C\",\n\t\tindigo: \"4B0082\",\n\t\tivory: \"FFFFF0\",\n\t\tkhaki: \"F0E68C\",\n\t\tlavender: \"E6E6FA\",\n\t\tlavenderblush: \"FFF0F5\",\n\t\tlawngreen: \"7CFC00\",\n\t\tlemonchiffon: \"FFFACD\",\n\t\tlightblue: \"ADD8E6\",\n\t\tlightcoral: \"F08080\",\n\t\tlightcyan: \"E0FFFF\",\n\t\tlightgoldenrodyellow: \"FAFAD2\",\n\t\tlightgray: \"D3D3D3\",\n\t\tlightgreen: \"90EE90\",\n\t\tlightgrey: \"D3D3D3\",\n\t\tlightpink: \"FFB6C1\",\n\t\tlightsalmon: \"FFA07A\",\n\t\tlightseagreen: \"20B2AA\",\n\t\tlightskyblue: \"87CEFA\",\n\t\tlightslategray: \"778899\",\n\t\tlightslategrey: \"778899\",\n\t\tlightsteelblue: \"B0C4DE\",\n\t\tlightyellow: \"FFFFE0\",\n\t\tlime: \"00FF00\",\n\t\tlimegreen: \"32CD32\",\n\t\tlinen: \"FAF0E6\",\n\t\tmagenta: \"FF00FF\",\n\t\tmaroon: \"800000\",\n\t\tmediumaquamarine: \"66CDAA\",\n\t\tmediumblue: \"0000CD\",\n\t\tmediumorchid: \"BA55D3\",\n\t\tmediumpurple: \"9370DB\",\n\t\tmediumseagreen: \"3CB371\",\n\t\tmediumslateblue: \"7B68EE\",\n\t\tmediumspringgreen: \"00FA9A\",\n\t\tmediumturquoise: \"48D1CC\",\n\t\tmediumvioletred: \"C71585\",\n\t\tmidnightblue: \"191970\",\n\t\tmintcream: \"F5FFFA\",\n\t\tmistyrose: \"FFE4E1\",\n\t\tmoccasin: \"FFE4B5\",\n\t\tnavajowhite: \"FFDEAD\",\n\t\tnavy: \"000080\",\n\t\toldlace: \"FDF5E6\",\n\t\tolive: \"808000\",\n\t\tolivedrab: \"6B8E23\",\n\t\torange: \"FFA500\",\n\t\torangered: \"FF4500\",\n\t\torchid: \"DA70D6\",\n\t\tpalegoldenrod: \"EEE8AA\",\n\t\tpalegreen: \"98FB98\",\n\t\tpaleturquoise: \"AFEEEE\",\n\t\tpalevioletred: \"DB7093\",\n\t\tpapayawhip: \"FFEFD5\",\n\t\tpeachpuff: \"FFDAB9\",\n\t\tperu: \"CD853F\",\n\t\tpink: \"FFC0CB\",\n\t\tplum: \"DDA0DD\",\n\t\tpowderblue: \"B0E0E6\",\n\t\tpurple: \"800080\",\n\t\tred: \"FF0000\",\n\t\trosybrown: \"BC8F8F\",\n\t\troyalblue: \"4169E1\",\n\t\tsaddlebrown: \"8B4513\",\n\t\tsalmon: \"FA8072\",\n\t\tsandybrown: \"F4A460\",\n\t\tseagreen: \"2E8B57\",\n\t\tseashell: \"FFF5EE\",\n\t\tsienna: \"A0522D\",\n\t\tsilver: \"C0C0C0\",\n\t\tskyblue: \"87CEEB\",\n\t\tslateblue: \"6A5ACD\",\n\t\tslategray: \"708090\",\n\t\tslategrey: \"708090\",\n\t\tsnow: \"FFFAFA\",\n\t\tspringgreen: \"00FF7F\",\n\t\tsteelblue: \"4682B4\",\n\t\ttan: \"D2B48C\",\n\t\tteal: \"008080\",\n\t\tthistle: \"D8BFD8\",\n\t\ttomato: \"FF6347\",\n\t\tturquoise: \"40E0D0\",\n\t\tviolet: \"EE82EE\",\n\t\twheat: \"F5DEB3\",\n\t\twhite: \"FFFFFF\",\n\t\twhitesmoke: \"F5F5F5\",\n\t\tyellow: \"FFFF00\",\n\t\tyellowgreen: \"9ACD32\"\n\t}\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = Rainbow;\n}\n"]},"metadata":{},"sourceType":"script"}