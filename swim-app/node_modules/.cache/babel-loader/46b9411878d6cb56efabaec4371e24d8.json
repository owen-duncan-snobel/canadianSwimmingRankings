{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/peakMonth/peakMonth.js\";\nimport React, { Component } from 'react';\nimport { EVENTS } from '../../constants/swimming/swimming';\nimport * as SwimAnalytics from '../../constants/swimAnalytics/swimAnalytics';\nimport { Line } from 'react-chartjs-2';\n\nclass PeakMonth extends Component {\n  render() {\n    if (this.props.swimmerData == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        name: \"PeakMonth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else {\n      let allData = this.props.swimmerData;\n      let data = []; // * Need to process data from Workbook -> Worksheets -> Event -> Swimmers\n\n      allData.forEach(Workbook => {\n        // * In every Workbook (Age / Year) it holds Sheets with the Events, will select the sheet that contains the events data\n        let index = EVENTS.indexOf(this.props.event);\n        let Sheet = Workbook[0][index]; // * For the selected event collect all the swimmer data\n\n        Sheet.forEach(swimmer => {\n          data.push(swimmer);\n        });\n      });\n      let months = Array(12).fill(0);\n      let meets = SwimAnalytics.mostOccurences(SwimAnalytics.meetMonth(data));\n      meets.forEach((value, key) => {\n        months[key] = value;\n      });\n      console.log(meetOccurences); // * Data that will be passed to the Linegraph Component\n\n      data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [{\n          label: this.props.swimEvent,\n          backgroundColor: 'rgb(255, 99, 132)',\n          pointBackgroundColor: ['rgb(255, 99, 132)'],\n          borderColor: 'rgb(255, 99, 132)',\n          fill: false,\n          data: months\n        }]\n      }; //console.log(SwimAnalytics.mostOccurences(data));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        data: data,\n        height: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nexport default PeakMonth;","map":{"version":3,"sources":["/Users/owen/Desktop/Selenium_Scraping_Js/SwimCanada/Puppeteer_Scraping_SwimCanada/swim-app/src/components/peakMonth/peakMonth.js"],"names":["React","Component","EVENTS","SwimAnalytics","Line","PeakMonth","render","props","swimmerData","allData","data","forEach","Workbook","index","indexOf","event","Sheet","swimmer","push","months","Array","fill","meets","mostOccurences","meetMonth","value","key","console","log","meetOccurences","labels","datasets","label","swimEvent","backgroundColor","pointBackgroundColor","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6CAA/B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAoC;AAChC,0BACI;AAAK,QAAA,IAAI,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,KAJD,MAIO;AAEH,UAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWC,WAAzB;AACA,UAAIE,IAAI,GAAG,EAAX,CAHG,CAKH;;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,QAAQ,IAAI;AACxB;AACA,YAAIC,KAAK,GAAGX,MAAM,CAACY,OAAP,CAAe,KAAKP,KAAL,CAAWQ,KAA1B,CAAZ;AACA,YAAIC,KAAK,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYC,KAAZ,CAAZ,CAHwB,CAIxB;;AACAG,QAAAA,KAAK,CAACL,OAAN,CAAcM,OAAO,IAAI;AACrBP,UAAAA,IAAI,CAACQ,IAAL,CAAUD,OAAV;AACH,SAFD;AAGH,OARD;AAUA,UAAIE,MAAM,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAb;AACA,UAAIC,KAAK,GAAGnB,aAAa,CAACoB,cAAd,CAA6BpB,aAAa,CAACqB,SAAd,CAAwBd,IAAxB,CAA7B,CAAZ;AACAY,MAAAA,KAAK,CAACX,OAAN,CAAc,CAACc,KAAD,EAAQC,GAAR,KAAgB;AAC1BP,QAAAA,MAAM,CAACO,GAAD,CAAN,GAAcD,KAAd;AACH,OAFD;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,EAtBG,CAuBH;;AACAnB,MAAAA,IAAI,GAAG;AACHoB,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CADL;AAEHC,QAAAA,QAAQ,EAAE,CAAC;AACPC,UAAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW0B,SADX;AAEPC,UAAAA,eAAe,EAAE,mBAFV;AAGPC,UAAAA,oBAAoB,EAAE,CAAC,mBAAD,CAHf;AAIPC,UAAAA,WAAW,EAAE,mBAJN;AAKPf,UAAAA,IAAI,EAAE,KALC;AAMPX,UAAAA,IAAI,EAAES;AANC,SAAD;AAFP,OAAP,CAxBG,CAoCH;;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAET,IAAZ;AAAkB,QAAA,MAAM,EAAE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;AACJ;;AAjD6B;;AAmDlC,eAAeL,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { EVENTS } from '../../constants/swimming/swimming';\nimport * as SwimAnalytics from '../../constants/swimAnalytics/swimAnalytics';\nimport { Line } from 'react-chartjs-2';\n\nclass PeakMonth extends Component {\n    render() {\n        if (this.props.swimmerData == null) {\n            return (\n                <div name=\"PeakMonth\"> </div>\n            )\n        } else {\n\n            let allData = this.props.swimmerData;\n            let data = [];\n\n            // * Need to process data from Workbook -> Worksheets -> Event -> Swimmers\n            allData.forEach(Workbook => {\n                // * In every Workbook (Age / Year) it holds Sheets with the Events, will select the sheet that contains the events data\n                let index = EVENTS.indexOf(this.props.event)\n                let Sheet = Workbook[0][index];\n                // * For the selected event collect all the swimmer data\n                Sheet.forEach(swimmer => {\n                    data.push(swimmer);\n                })\n            })\n\n            let months = Array(12).fill(0);\n            let meets = SwimAnalytics.mostOccurences(SwimAnalytics.meetMonth(data));\n            meets.forEach((value, key) => {\n                months[key] = value\n            })\n\n            console.log(meetOccurences)\n            // * Data that will be passed to the Linegraph Component\n            data = {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n                datasets: [{\n                    label: this.props.swimEvent,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    pointBackgroundColor: ['rgb(255, 99, 132)'],\n                    borderColor: 'rgb(255, 99, 132)',\n                    fill: false,\n                    data: months,\n                }]\n            }\n\n            //console.log(SwimAnalytics.mostOccurences(data));\n            return (\n                <div>\n                    <Line data={data} height={100} />\n                </div>\n            )\n        }\n    }\n}\nexport default PeakMonth;"]},"metadata":{},"sourceType":"module"}